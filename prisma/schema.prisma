generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  role          Role      @default(USER)
  image         String?
  accounts      Account[]
  Saved         Saved[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Views {
  id   String   @id @default(cuid())
  time DateTime @default(now())
  slug String
}

model Saved {
  userId      String
  ArticleSlug String
  user        User   @relation(fields: [userId], references: [id])

  @@id([userId, ArticleSlug])
}

enum Role {
  USER
  ADMIN
}

model ProposalVote {
  voteId     String   @id @default(cuid())
  proposalId Int
  name       String
  surname    String
  email      String
  age        Int
  time       DateTime @default(now())

  @@unique([proposalId, email])
}
